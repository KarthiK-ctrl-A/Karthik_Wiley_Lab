=========== 25 - 07- 2022 =================


 - The software development life cycle is a structured
process that enables the production of high quality, in
the shortest possible production time

- Planning -> analysis -> Design -> implementation ->

	^--	Maintenance    <-

FEASIBILITY ANALYSIS

REQUIREMENT ANALYSIS

- SRS - Software Requirement Specification
  it contains requirements for the req of clients
  2 types of req , functional and non-function

Functional req - they are tech features of project
 ex - booking form, login form, profile etc

Non-Functional req - which are indirect to consumer
 ex - website to be reliable, fast, UI/UX should be nice
etc which are indirectly related to project


DESIGN

 - 2 types - High level and Low level

HLD - talks about architecture or infrastructure of project
LLD - talks about module level or detailed description
of every module
 - UML diagrams

IMPLEMENTATION

OOP - Object oriented programming
- coding

VERIFICATION / TESTING

 - Black Box, white Box, System, integration and Unit testing
	user acceptance testing

MAINTENANCE / DEPLOYMENT 





=======================================
========================================
========================================
========================================
=========================================
======= 26 - 07 - 2022 ===================

SDLC MODELS

 - Waterfall model
	req - design - impl - verification - maintenance
	- simple
	- easy to implement
	- suitable for small projects
	- Not ideal for large/complex softwares
	- Each phase req lot of time

 - Iterative Model
	- same phases as waterfall , but repetitive
	  inception - req gathering,
	  elaboration - design, 
	  construction - implement and test, 
	  transition - Maintenance & deployment 

	- softwares are developed in small scale
	- every build is a prototype or updated version/
		new release of software
	-  any change/ req can be incorporated in new cycle
	-  risk can be identified early
	-  defects can be identifies at early stage
	-  product is divided in modules/chunks , and easy to manage

 - Prototype Model
	- req -> design -> Prototype -> eval -> refine -> final
	- 
  
- spiral Model
	- Risk Factors 
		- Inadequate estimation of project time
			difficult to estimate req time cost etc
		- Unrealistic Schedule
			may exceed delivery time in turn increase cost
		- Unrealistic Budget
			may depend on budget, time and effort
		- Unclear Project Scope
			may fail if goal is not understood
		- Insufficient Project resources
			may fail for insufficient tools, tech,etc

	- Phases in spiral model
	  	1 - objective
	  	2 - risk analysis
	  	3 - Engineering
	  	4 - Evaluation
 - AGILE - ability to respond to changes
 - CHALLENGES IN SDLC
	- management/schedule
	- communication during initial phase [ with customer]
	- Development
	- Late request
	- crunch time for testing software
	  solution - Agile method

===================================================================	

AGILE METHOD - philosophy

 - agile follows iterative and team based approach
 - also known as cross functional team
 - Objective of agile is to quickly deliver the product
	with functional components
 - Agile means ability to respond to changes [req of client]
 - In agile development team directly interacts with customer
 - in agile, each iteration lasts from 1-3 weeks 
 - software is delivered in multiple increments
 
==================================================================
SCRUM - USED TO IMPLEMENT AGILE PHIL

 - it is a subset of agile / implementation of agile
 - it is a project management system
 - it is a lightweight process framework for agile development
 - BENEFITS
	 - increased quality of the deliverables
	 - cope with changes
	 - better estimates while spending less time 
	 - more control of the project schedule and state
 - scrum can control software and product development
 - uses iterative incremental practice
 - increases productivity
 - it is not restricted to software development projects
 - 

-------------SCRUM MANIFESTO------------------------------------
	
	    AGILE                 OVER        SDLC

 - individual and interaction   OVER   process and tools
 - working software             OVER   comprehensive doc
 - customer collaboration       OVER   contract negotiation
 - Responding to changes        OVER   following a plan


------------------SCRUM ROLES----------------------------------

 - PRODUCT OWNER : product sponsor [who pays money]
	=> decides what are features requires in software
	=> decides release dates, priority of features and budget

 - SCRUM MASTER : typically a project manager/ team leader
   	=> Responsible for enacting scrum values and practices
   	=> Remove impediments, politics and keep everyone productive
 
 - PROJECT TEAM : 5 - 10 members, varies from org to org, generally
			cross functional, programer, UI/UX etc
	=> No member is allowed to leave or change team during current
	   iteration of development
	=> 

 - SPRINT : complete development lifecycle of 1 iteration

 - PRODUCT BACKLOG : list of features which are decided to 
   be added in software in current lifecycle

 - SPRINT BACKLOG : features that couldn't be added in project
   in current iteration after sprint

 - DAILY SCRUM MEETINGS
	=> daily 15 min standup meeting
	=> Not for problem solving
	=> everyone from team is invited
	=> only team member , owner, ,aster can talk
	=> what you do ?, you will do ?, what are obstacles ?

 - After each sprint, BURNDOWN chart is prepared
     burn down - horizontal - slowly
 
 - SPRINT REVIEW : happens at the end of sprint/ iteration
	=> team explains, what i had accomplished during the sprint
	=> Typically demo of the software is presented
	=> 2-4 hrs of duration
	=> whole team participates, all other members are also 
		invited, ex: acc,sales, legal, finance etc
	
==================================================================

CLOUD COMPUTING

 - cloud computing is the delivery of computing services over the 
   internet - storage, networking, servers, analytics, intelligence
 - Cloud can be used for
	- dev new apps
	- storage, recovery etc
	- host blogs, websites
	- delivery of softwares on demand
	- data analysis
	- streaming videos
	- Data Governance
 - Benefits of Cloud Computing
	- Cost
	- Speed	
	- enhances productivity
	- reliability
	- security
 

----------------------------------------------------------------

 - Hypervisor is required to host OS
 - Types of hypervisors:
	- Type 1:
		=> Which run directly on hardware
		=> VMware ESXI, XEN / Citrix
	- Type 2:
		=> installed on top of OS
		=> VMware Fusion, Oracle VMware
		

===============================================================
===============================================================
====================== 27 - 07 - 2022 =========================
===============================================================

middle ware - between OS and apps software serving main purpose
cassandra, mongodB, apache hive, oracle etc

TYPES OF CLOUD SERVICES

IAAS - It is also known as cloud infrastructure services. It is responsible
 for managing applications data, middleware, and runtime environments.
Ex - AWS-EC2, compute engine, etc


PAAS - Platform as a service (PaaS) is a cloud computing model where a 
third-party provider delivers hardware and software tools to users over
 the internet. Usually, these tools are needed for application development.


SAAS - Software-as-a-Service, or SaaS for short, is a cloud-based method of 
providing software to users. SaaS users subscribe to an application rather than 
purchasing it once and installing it. Users can log into and use a SaaS application 
from any compatible device over the Internet. 


=============================================================


VCS - Version Control System
 - It records changes to a file or set of files over time so that you
can recall specific version later
 - allows to work together
 - VCS is a collection of software tools that help a team to manage 
changes in source code.
 - uses special kinds of DB to keep track of every modification
 - Developers can compare earlier versions of code with the older version
to fix the mistakes


Types of VCS
 - Localized
	=> keeps local copies of the files
  	=> if local computer crashes, everything is lost
 - Centralized
	=> These systems have single server that contains the versioned
		files, ans clients checkout from central place
	=> Too risk for network traffic, and if server is lost everything
		is lost
 - Distributed
	=> the user has local copy of repository
	=> the clients don't just checkout the latest snapshot of the files
		even they can fully mirror the repository
	=> The local repo contains all the files and metadata present in
		the main repository

------------------------------------------------------------------------------------
- GIT and GITHUB
	- git commands
		=> version - git --version	
		=> to update new id --- git config --global user.name <user.name>
		=> to update mail ----- git config --global user.email </email/>

		=> command to make current directory as git directory	
			- git init
		=> command to mark untracked files
			- git status
		=> command to add tracker files
			- git add #filename
			or
			- git add * ///or/// git add .
		=> to commit 
			-git commit -m "message"
		
		=> to restore
			- git restore "filename'
		=> to know which branch
			- git branch == * indicates current
		=>git -b - create branch
			  -checkout - goto that branch          ######production
		=> to merge with master
				- git merge current branch

	== to push onto server
	-- git remote add origin "https link"
	-- git branch -M "branch name"

	-- git push -u origin production - pushing contents into origin URL
	-- git pull url - to pull the project from main branch


	=============================================================
	=============================================================
	==================== 28 - 07 - 2022 =========================
	============================================================
	============================================================

	SQL - Structured Query Language  and RDBMS
	 
	 - Especially MYSQL 	
	 - security -> Authorization, Authentication
	 - Integrity
	 - Relational Management
	 -  Can Handle High Volume of data
	 - Supports Client Server architecture
	 - can be Integrated across platforms
	
	-> Software engineers use MySQL to store, Manage, Manipulate data
	
	-> Data Scientists use as analytical tool

	-> MySQL also used as Data Warehouse

	-> ETL - Extract transform Load
	 
	-> Apache flume, sqoop, nifi



-> Composite key
	- it is a combination of columns that form primary key
	- ex:   Create table sub(
				name varchar(255),
				address varchar(255),
				age int,
				city varchar(255)

				primary key (name,address)  //* Composite key *//
			);

-> Candidate key
	- columns/attributes which have characteristics of primary key but are not primary key
	- columns that are unique and not null
	- can be single or combination
	- ex: phone number, adhaar/any other doc with ID etc

-> Foreign key
	- primary key in another table is called Foreign key
	- Foreign key helps to relate rows of one table to rows of another table
	- Foreign key helps to create relationships between 2 tables
	- referential integrity is maintained by foreign key
	- Foreign key cannot be created without referring to corresponding primary key
	- Foreign key can contain duplicates and NULLs too.

-> Referential Integrity
	- When inserting value in Foreign key column, the value being inserted is automatically
	  checked for its presence in corresponding primary key column, if the value exists then the
	  value is allowed to be stored in foreign key column, if the value doesn't exist the query/command is rejected
	- not necessary to reference only primary key, can be referenced to unique key


-> Functional Dependency
	- 



-- NORMALIZATION 

	-> It is a process of removing 'anomalies' from raw data
	->  Anomalies
		1. Data redundancy : Containing duplicate data
			risk - increase in disk space
				 - increase in processing time
				 - 
		2. Missing unique identification

	-> more number of normal forms = better table structure = better data
	-> hence ease in updating ,inserting , querying 
	
	-> \     1NF      /             - Integrity Constraints
		\    2NF     /					- primary key
		 \   3NF    /					- unique
		  \	 BCNF  /
		   \  .   /
		    \ .  /
		     \  /
			  \/

	-> Normal Forms :

		-> 1st Normal Form : 
			- Each cel must contain  exactly one value
			- Multivalued attribute should be eliminated
		
		-> 2nd Normal Form :      ----/* Char of primary key : unique + not null */------
			- should be in 1NF
			- Each row must be uniquely identified using a key  
			- No partial dependency
		-> 3rd Normal Form :
			- 2nd Normal Form
			- No Functional Dependency 

	->Database?
		- Container like structure used to create and maintain tables

		- SQL case insensitive
		- ctrl+enter shortcut
		- terminate using ; each statement


admin
Karthik7$

-- NULL TREATMENT
-- -- ifnull()
		-> returns  not null value
		accept 2 arguments
		example - 
			select ifnull(null,a)
			select ifnull(b,null)
			select ifnull(cm,e)
			select ifnull(null, null)

-- -- coalesce()
		-> 
-- coalesce 
-- accept any number of args
-- returns first not null value

select coalesce(null, null, 'Dr.stange',null,null);
select coalesce(null,'ironman','a',null,'b');

-- ifnull is null replaceer
select name,ifnull(indepyear,'N/A') as 'newindepyear' from country ;

 -- coalesce is not replcaer but to fetch from assosciated columns
 
 
-- NULL TREATMENT
-- -- ifnull()
-- -- coalesce()

select ifnull('c','d');

-- coalesce 
-- accept any number of args
-- returns first not null value

select coalesce(null, null, 'Dr.stange',null,null);
select coalesce(null,'ironman','a',null,'b');

-- ifnull is null replaceer
select name,ifnull(indepyear,'N/A') as 'newindepyear' from country ;

 -- coalesce is not replcaer but to fetch from assosciated columns
 
 desc country;
select name,indepyear,gnpold,coalesce(indepyear,gnpOld,'Kuch Nahi Mila') from country;


select concat('avengers',' endgame');

-- activity 14
desc country;
select Name,ifnull(IndepYear,concat('N/A ',Name)) from country limit 5 ;

-- 	I THINK USUALLY AGGREGATE FUNCTIONS WOULD GO WITH GROUP BY CLAUSE


-- having clause to filter aggreagte rows

